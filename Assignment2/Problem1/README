Assignment2 Problem1 John Liu
-----------------------------------------------------------------------------------

Run the following command in terminal at the very beginning
    (Assuming the lc3as is already installed in the same folder):
        $ gcc lc3.c -o A2P1
        $ ./lc3as 2-1-trapvec.asm
        $ ./lc3as 2-1-trap.asm
        $ ./lc3as 2-1-process1.asm
        $ ./lc3as 2-1-process2.asm
        $ ./lc3as 2-1-process3.asm
        $ ./lc3as 2-1-process4.asm
        $ ./lc3as 2-1-process5.asm
        $ ./lc3as 2-1.asm

Run the VM program:
    $ ./A2P1

File Explanation:
    C File:
        lc3.c : C file of Virtual Machine
    ASM File:
        2-1-trapvec.asm : Assembly file aims to fill the trap vectors
        2-1-trap.asm : Assembly file aims to fullfill the trap service routines
        2-1-process1.asm : Assembly file aims to fill the scheduler process 1
        2-1-process2.asm : Assembly file aims to fill the scheduler process 2
        2-1-process3.asm : Assembly file aims to fill the scheduler process 3
        2-1-process4.asm : Assembly file aims to fill the scheduler process 4
        2-1-process5.asm : Assembly file aims to fill the scheduler process 5
        2-1.asm : Assembly file of the main function
    TXT File:
        memory_dump_p2_1.txt : Text file of memory/register dump at the OS begin (before assign processes ready to run)
        memory_dump_p2_2.txt : Text file of memory/register dump right after the TRAP_HALT from the main function (MR_SM changes from 0 to 1)
        memory_dump_p2_3.txt : Text file of memory/register dump before the process 1 starts (MR_SM change from 1 to 0) 
        memory_dump_p2_4.txt : Text file of memory/register dump in the process 1 (MR_SM remains 0, status of process 1 changes from 2 to 1)
        memory_dump_p2_5.txt : Text file of memory/register dump right after the TRAP_HALT from the process 1 (MR_SM changes from 0 to 1)
        memory_dump_p2_6.txt : Text file of memory/register dump before the process 1 starts (MR_SM change from 1 to 0) 
        memory_dump_p2_7.txt : Text file of memory/register dump in the process 1 (MR_SM remains 0, status of process 1 changes from 2 to 1)
        memory_dump_p2_8.txt : Text file of memory/register dump right after the TRAP_HALT from the process 1 (MR_SM changes from 0 to 1)
        memory_dump_p2_9.txt : Text file of memory/register dump before the process 1 starts (MR_SM change from 1 to 0) 
        memory_dump_p2_10.txt : Text file of memory/register dump in the process 1 (MR_SM remains 0, status of process 1 changes from 2 to 1)

PLEASE NOTE:
    Since the status of process was modified in the process, the scheduler I designed will stuck in the process 1. So that text file 2, 5, 8 are the same; 3, 6, 9 are the same and 4, 7, 10 are the same.